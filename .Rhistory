update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=gnu++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=gnu++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=gnu++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=gnu++11")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=gnu++11")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=gnu++14")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=gnu++14")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++11")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = FALSE, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++11")
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
#Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
library(Rcpp)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
sourceCpp("rcpp/Leiden.cpp", verbose = TRUE, rebuild = TRUE)
library(Rcpp)
library(igraph)
library(Matrix)
update.packages("Rcpp")
setwd("C:/Users/bbessell/Projects/GitHub/AluNet")
Sys.setenv(PKG_CXXFLAGS = "-std=c++17")
Sys.which("make")
Sys.which("g++")
sourceCpp("rcpp/compile_test.cpp", verbose = TRUE, rebuild = TRUE)
View(compile_success)
sourceCpp("rcpp/GraphUtils.cpp", verbose = F, rebuild = TRUE)
# test Rcpp graph construction with random graph (seg fault stress test)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
num_vertices <- 100
zero_prob <- 0.3
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(num_vertices, zero_prob)
#print(adjacency_matrix)
graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
plot.igraph(g)
# test Rcpp graph construction with random graph (seg fault stress test)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
num_vertices <- 100
zero_prob <- 0.3
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(num_vertices, zero_prob)
#print(adjacency_matrix)
graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
l <- layout_in_circle(g)
plot.igraph(l)
# test Rcpp graph construction with random graph (seg fault stress test)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
num_vertices <- 100
zero_prob <- 0.3
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(num_vertices, zero_prob)
#print(adjacency_matrix)
graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
l <- layout_in_circle(g)
plot(l)
# test Rcpp graph construction with random graph (seg fault stress test)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
num_vertices <- 100
zero_prob <- 0.3
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(num_vertices, zero_prob)
#print(adjacency_matrix)
graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
l <- layout_on_sphere(g)
plot(l)
# test Rcpp graph construction with random graph (seg fault stress test)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
num_vertices <- 100
zero_prob <- 0.3
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(num_vertices, zero_prob)
#print(adjacency_matrix)
graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
#l <- layout_on_sphere(g)
plot(g)
source("r/createRandomZeroInflatedAdjacencyMatrix")
source("r/createRandomZeroInflatedAdjacencyMatrix.r")
adjacency_matrix <- "data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt"
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
plot.igraph(g)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- "data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt"
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
plot.igraph(g)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
View(createRandomZeroInflatedAdjacencyMatrix)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix("data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix("data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix("data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix("data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
# test Rcpp graph construction with random graph (seg fault stress test)
source("r/createAdjacencyMatrixFromHiCData")
# test Rcpp graph construction with random graph (seg fault stress test)
source("r/createRandomZeroInflatedAdjacencyMatrix.R")
num_vertices <- 100
zero_prob <- 0.3
adjacency_matrix <- createRandomZeroInflatedAdjacencyMatrix(num_vertices, zero_prob)
#print(adjacency_matrix)
graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
#l <- layout_on_sphere(g)
plot(g)
source("r/createAdjacencyMatrixFromHiCData")
source("r/createAdjacencyMatrixFromHiCData")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
plot.igraph(g)
View(adjacency_matrix)
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
weights <- graph_data$weights
#print(graph_data)
g <- graph.data.frame(graph_data)
#print(g)
edge_weights <- E(g)$weight
#print(edge_weights)
#plot(g)
plot.igraph(g)
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
source("r/createAdjacencyMatrixFromHiCData.R", "chr1")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
View(adjacency_matrix)
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
View(adjacency_matrix)
View(adjacency_matrix)
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
View(adjacency_matrix)
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
View(adjacency_matrix)
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromHiCData(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
View(adjacency_matrix)
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
createAdjacencyMatrixFromTSV <- function(file_path, chromosome) {
# Initialize variables
adjacency_matrix <- NULL
vertices <- character(0)
num_vertices <- 0
# Read the TSV file line by line
con <- file(file_path, "r")
while (length(line <- readLines(con, n = 1)) > 0) {
fields <- strsplit(line, "\t")[[1]]
# Check if the line belongs to the specified chromosome
fragment1 <- fields[1]
fragment2 <- fields[2]
if (startsWith(fragment1, chromosome) && startsWith(fragment2, chromosome)) {
if (!(fragment1 %in% vertices)) {
vertices <- c(vertices, fragment1)
num_vertices <- num_vertices + 1
}
if (!(fragment2 %in% vertices)) {
vertices <- c(vertices, fragment2)
num_vertices <- num_vertices + 1
}
}
}
close(con)
# Initialize the adjacency matrix based on the number of vertices
adjacency_matrix <- matrix(0, nrow = num_vertices, ncol = num_vertices)
rownames(adjacency_matrix) <- colnames(adjacency_matrix) <- vertices
# Read the file again and assign weights
con <- file(file_path, "r")
while (length(line <- readLines(con, n = 1)) > 0) {
fields <- strsplit(line, "\t")[[1]]
# Check if the line belongs to the specified chromosome
fragment1 <- fields[1]
fragment2 <- fields[2]
raw_count <- as.numeric(fields[4])
if (startsWith(fragment1, chromosome) && startsWith(fragment2, chromosome)) {
adjacency_matrix[fragment1, fragment2] <- raw_count
adjacency_matrix[fragment2, fragment1] <- raw_count
}
}
close(con)
return(adjacency_matrix)
}
source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
createAdjacencyMatrixFromTSV <- function(file_path, chromosome) {
# Initialize variables
adjacency_matrix <- NULL
vertices <- character(0)
num_vertices <- 0
# Read the TSV file line by line
con <- file(file_path, "r")
while (length(line <- readLines(con, n = 1)) > 0) {
fields <- strsplit(line, "\t")[[1]]
# Check if the line belongs to the specified chromosome
fragment1 <- fields[1]
fragment2 <- fields[2]
if (startsWith(fragment1, chromosome) && startsWith(fragment2, chromosome)) {
if (!(fragment1 %in% vertices)) {
vertices <- c(vertices, fragment1)
num_vertices <- num_vertices + 1
}
if (!(fragment2 %in% vertices)) {
vertices <- c(vertices, fragment2)
num_vertices <- num_vertices + 1
}
}
}
close(con)
# Initialize the adjacency matrix based on the number of vertices
adjacency_matrix <- matrix(0, nrow = num_vertices, ncol = num_vertices)
rownames(adjacency_matrix) <- colnames(adjacency_matrix) <- vertices
# Read the file again and assign weights
con <- file(file_path, "r")
while (length(line <- readLines(con, n = 1)) > 0) {
fields <- strsplit(line, "\t")[[1]]
# Check if the line belongs to the specified chromosome
fragment1 <- fields[1]
fragment2 <- fields[2]
raw_count <- as.numeric(fields[4])
if (startsWith(fragment1, chromosome) && startsWith(fragment2, chromosome)) {
adjacency_matrix[fragment1, fragment2] <- raw_count
adjacency_matrix[fragment2, fragment1] <- raw_count
}
}
close(con)
return(adjacency_matrix)
}
#source("r/createAdjacencyMatrixFromHiCData.R")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
#source("r/createAdjacencyMatrixFromHiCData.R")
df <- read.csv("data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
View(df)
#source("r/createAdjacencyMatrixFromHiCData.R")
df <- read.csv("data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
print(adjacency_matrix)
#graph_data <- createGraph(adjacency_matrix)
edges <- graph_data$edges
#source("r/createAdjacencyMatrixFromHiCData.R")
df <- read.csv("data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt")
adjacency_matrix <- createAdjacencyMatrixFromTSV(
"data/GSE148434_NS_all.5kb.1e-2.FitHiC.all.txt", "chr1")
